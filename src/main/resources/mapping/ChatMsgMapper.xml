<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qqq.yuxin.dao.ChatMsgMapper">
  <resultMap id="BaseResultMap" type="com.qqq.yuxin.model.ChatMsg">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="send_user_id" jdbcType="VARCHAR" property="sendUserId" />
    <result column="accept_user_id" jdbcType="VARCHAR" property="acceptUserId" />
    <result column="msg" jdbcType="VARCHAR" property="msg" />
    <result column="sing_flag" jdbcType="INTEGER" property="singFlag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, send_user_id, accept_user_id, msg, sing_flag, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chat_msg
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from chat_msg
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.qqq.yuxin.model.ChatMsg">
    insert into chat_msg (id, send_user_id, accept_user_id, 
      msg, sing_flag, create_time
      )
    values (#{id,jdbcType=VARCHAR}, #{sendUserId,jdbcType=VARCHAR}, #{acceptUserId,jdbcType=VARCHAR}, 
      #{msg,jdbcType=VARCHAR}, #{singFlag,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qqq.yuxin.model.ChatMsg">
    insert into chat_msg
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sendUserId != null">
        send_user_id,
      </if>
      <if test="acceptUserId != null">
        accept_user_id,
      </if>
      <if test="msg != null">
        msg,
      </if>
      <if test="singFlag != null">
        sing_flag,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="sendUserId != null">
        #{sendUserId,jdbcType=VARCHAR},
      </if>
      <if test="acceptUserId != null">
        #{acceptUserId,jdbcType=VARCHAR},
      </if>
      <if test="msg != null">
        #{msg,jdbcType=VARCHAR},
      </if>
      <if test="singFlag != null">
        #{singFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qqq.yuxin.model.ChatMsg">
    update chat_msg
    <set>
      <if test="sendUserId != null">
        send_user_id = #{sendUserId,jdbcType=VARCHAR},
      </if>
      <if test="acceptUserId != null">
        accept_user_id = #{acceptUserId,jdbcType=VARCHAR},
      </if>
      <if test="msg != null">
        msg = #{msg,jdbcType=VARCHAR},
      </if>
      <if test="singFlag != null">
        sing_flag = #{singFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qqq.yuxin.model.ChatMsg">
    update chat_msg
    set send_user_id = #{sendUserId,jdbcType=VARCHAR},
      accept_user_id = #{acceptUserId,jdbcType=VARCHAR},
      msg = #{msg,jdbcType=VARCHAR},
      sing_flag = #{singFlag,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>